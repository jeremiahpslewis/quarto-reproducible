---
title: "Julia Code"
author: "Jeremiah Lewis"
format:
  html:
    code-fold: false
engine: jupyter
---

## Julia Supporting Code

### Chapter 1 {#sec-ch-1-jl}

Snippet from: https://quarto.org/docs/computations/julia.html#code-blocks

```{julia}
#| tags: [parameters]
#| include: false

fig_format = "pdf"
```


```{julia}
import IJulia

fig_width = 5.5
fig_height = 4.5

fig_format = Symbol(fig_format)

fig_dpi = 96

# no retina format type, use svg for high quality type/marks
if fig_format == :retina
  fig_format = :svg
elseif fig_format == :pdf
  # Enable PDF support for IJulia
  IJulia.register_mime(MIME("application/pdf"))
  fig_dpi = 96
end

# convert inches to pixels
fig_width = fig_width * fig_dpi
fig_height = fig_height * fig_dpi

# Intialize Plots w/ default fig width/height
try
  import Plots

  # Plots.jl doesn't support PDF output for versions < 1.28.1
  # so use png (if the DPI remains the default of 300 then set to 96)
  if (Plots._current_plots_version < v"1.28.1") & (fig_format == :pdf)
    Plots.gr(size=(fig_width / fig_dpi * 96, fig_height / fig_dpi * 96), fmt = :png, dpi = fig_dpi)
  else
    Plots.gr(size=(fig_width, fig_height), fmt = fig_format, dpi = fig_dpi)
  end
catch e
  # @warn "Plots init" exception=(e, catch_backtrace())
end

# Initialize CairoMakie with default fig width/height
try
  import CairoMakie
  
  CairoMakie.activate!(type = string(fig_format))
  CairoMakie.update_theme!(resolution=(fig_width, fig_height))
catch e
    # @warn "CairoMakie init" exception=(e, catch_backtrace())
end
```

```{julia}
#| label: fig-covariance1111
#| fig-cap: "Covariance ellipses"

x = range(0, 10, length=100)
y = sin.(x)
CairoMakie.lines(x, y)
```


```{julia}
#| label: fig-covariance
#| fig-cap: "Covariance ellipses"

using Plots

plot([0; 1.0], [ 0.12000000000; 0.12000000003])
```

### Chapter 2

```{julia}
#| label: fig-covariance1
#| fig-cap: "Covariance ellipses"

using StatsPlots

covellipse([0,2], [2 1; 1 4], n_std=2, 
           aspect_ratio=1, label="cov1")
covellipse!([1,0], [1 -0.5; -0.5 3], 
            showaxes=true, label="cov2")
```

### Chapter 3

```{julia}
#| label: fig-covariance2
#| fig-cap: "Covariance ellipses"

using StatsPlots

covellipse([0,2], [2 1; 1 4], n_std=2, 
           aspect_ratio=1, label="cov1")
covellipse!([1,0], [1 -0.5; -0.5 3], 
            showaxes=true, label="cov2")
```

### Chapter 4

```{julia}
#| label: fig-covariance3
#| fig-cap: "Covariance ellipses"

using StatsPlots

covellipse([0,2], [2 1; 1 4], n_std=2, 
           aspect_ratio=1, label="cov1")
covellipse!([1,0], [1 -0.5; -0.5 3], 
            showaxes=true, label="cov2")
```

### Chapter 5

```{julia}
#| label: fig-covariance4
#| fig-cap: "Covariance ellipses"

using StatsPlots

covellipse([0,2], [2 1; 1 4], n_std=2, 
           aspect_ratio=1, label="cov1")
covellipse!([1,0], [1 -0.5; -0.5 3], 
            showaxes=true, label="cov2")
```
